name: Silver Layer - Data Processing

on:
  workflow_call:
  workflow_dispatch:

permissions:
  contents: write

jobs:
  process-silver-data:
    runs-on: ubuntu-latest
    
    outputs:
      silver-completed: ${{ steps.processing.outputs.completed }}
    
    steps:
      - name: Checkout repository
        if: ${{ !env.ACT }}
        uses: actions/checkout@v4
        with:
          # Fetch full history to ensure we have all data files
          fetch-depth: 0

      - name: Pull latest data files
        run: |
          git config --global user.name "github-actions[bot]"
          git config --global user.email "41898282+github-actions[bot]@users.noreply.github.com"
          # Get current branch name
          CURRENT_BRANCH=$(git branch --show-current)
          echo "Current branch: $CURRENT_BRANCH"
          git pull origin "$CURRENT_BRANCH" --no-edit || echo "Already up to date"

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install pandas numpy requests

      - name: Verify Bronze data exists
        run: |
          if [ ! -d "data/bronze" ] || [ "$(find data/bronze -name '*.json' | wc -l)" -eq 0 ]; then
            echo "No Bronze layer data found. Run bronze extraction first."
            exit 1
          fi
          
          echo "Bronze data verified: $(find data/bronze -name '*.json' | wc -l) files found"

      - name: Process Silver layer data
        id: processing
        run: |
          echo "Starting Silver layer processing..."
          python src/silver_process.py --org "${GITHUB_REPOSITORY_OWNER}"
          
          # Check if files were generated
          if [ "$(find data/silver -name '*.json' | wc -l)" -gt 0 ]; then
            echo "Silver processing completed successfully"
            echo "completed=true" >> $GITHUB_OUTPUT
          else
            echo "No files generated in silver layer"
            echo "completed=false" >> $GITHUB_OUTPUT
            exit 1
          fi

      - name: Update data registry
        if: steps.processing.outputs.completed == 'true'
        run: |
          echo "Updating data registry with Silver layer files..."
          python src/registry_manager.py

      - name: List generated files
        if: steps.processing.outputs.completed == 'true'
        run: |
          echo "Silver layer files generated:"
          find data/silver -name '*.json' -type f | sort | while read file; do
            size=$(du -h "$file" | cut -f1)
            records=$(jq 'if type == "array" then length elif type == "object" and has("_metadata") then (.record_count // "N/A") else "1" end' "$file" 2>/dev/null || echo "N/A")
            echo "  - $file ($size, $records records)"
          done

      - name: Commit and push Silver data
        if: steps.processing.outputs.completed == 'true' && !env.ACT
        run: |
          git config --global user.name "github-actions[bot]"
          git config --global user.email "41898282+github-actions[bot]@users.noreply.github.com"
          
          # Configure remote with token
          git remote set-url origin https://x-access-token:${{ secrets.GITHUB_TOKEN }}@github.com/${{ github.repository }}.git
          
          # Try merge strategy instead of rebase to avoid conflicts
          git config pull.rebase false
          
          # Add files before attempting merge
          git add data/silver/ data/master_registry.json data/data_catalog.json || echo "Some files may not exist yet"
          
          # Get current branch for pull/push operations
          CURRENT_BRANCH=$(git branch --show-current)
          echo "Working on branch: $CURRENT_BRANCH"
          
          # Pull with merge strategy and auto-resolve conflicts
          if ! git pull origin "$CURRENT_BRANCH" --no-edit; then
            echo "Merge conflicts detected, auto-resolving..."
            
            # For add/add conflicts, prefer our version (silver data)
            git status --porcelain | grep "AA" | awk '{print $2}' | xargs -r git checkout --ours
            git status --porcelain | grep "DU" | awk '{print $2}' | xargs -r git add
            git status --porcelain | grep "UD" | awk '{print $2}' | xargs -r git rm
            
            # Re-add our silver files
            git add data/silver/ data/master_registry.json data/data_catalog.json || echo "Some files may not exist"
            
            # Complete the merge
            git commit --no-edit -m "[Silver] Auto-resolve merge conflicts and update analytics data"
          fi
          
          # Add silver files again and commit if there are changes
          git add data/silver/ data/master_registry.json data/data_catalog.json || echo "Some files may not exist"
          
          if ! git diff --cached --quiet; then
            git commit -m "[Silver] Update processed analytics data
            
            - Processed Bronze data into analytics-ready formats
            - Generated $(find data/silver -name '*.json' | wc -l) silver layer files
            - Updated data registry and catalog"
          fi
          
          # Push with retry logic
          for i in {1..3}; do
            if git push origin "$CURRENT_BRANCH"; then
              echo "Push successful on attempt $i"
              break
            else
              echo "Push failed on attempt $i, retrying..."
              git pull --no-edit origin "$CURRENT_BRANCH"
              sleep 2
            fi
          done
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

