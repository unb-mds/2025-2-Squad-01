name: Coletar métricas da organização

on:
  workflow_dispatch:

jobs:
  metrics:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout do código
        uses: actions/checkout@v4

      - name: Mostrar variáveis automáticas
        run: |
          echo "Repositório: ${{ github.repository }}"
          echo "Organização: ${{ github.repository_owner }}"
          echo "Autor do evento: ${{ github.actor }}"
          echo "Branch: ${{ github.ref }}"

      - name: Preparar estrutura de diretórios
        run: |
          echo "Verificando se o diretório src/data existe..."
          if [ ! -d "src/data" ]; then
            echo "Criando diretório src/data..."
            mkdir -p src/data
          else
            echo "Diretório src/data já existe."
          fi
          
        

      - name: Chamada API autenticada
        run: |
          echo "Fazendo chamada para a API do GitHub..."
          HTTP_STATUS=$(curl -s -w "%{http_code}" -H "Authorization: Bearer ${{ secrets.GITHUB_TOKEN }}" \
               https://api.github.com/orgs/${{ github.repository_owner }}/repos \
               -o src/data/org_repos.json)
          
          echo "Status HTTP da resposta: $HTTP_STATUS"
          
          if [ "$HTTP_STATUS" -eq 200 ]; then
            echo "✅ API retornou sucesso (200)"
          else
            echo "❌ API retornou erro: $HTTP_STATUS"
            echo "Conteúdo da resposta:"
            cat src/data/org_repos.json
            exit 1
          fi

      - name: Verificar arquivo criado
        run: |
          echo "Verificando se o arquivo foi criado com sucesso..."
          if [ -f "src/data/org_repos.json" ]; then
            echo "✅ Arquivo org_repos.json criado com sucesso!"
            echo "Tamanho do arquivo: $(wc -c < src/data/org_repos.json) bytes"
            echo "Número de repositórios encontrados: $(jq length src/data/org_repos.json 2>/dev/null || echo 'Erro ao contar repositórios')"
            echo "Primeiras linhas do arquivo:"
            head -5 src/data/org_repos.json
          else
            echo "❌ Erro: Arquivo org_repos.json não foi criado!"
            exit 1
          fi
